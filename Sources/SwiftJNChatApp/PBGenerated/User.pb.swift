/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: User.proto
 *
 */

import Foundation
import SwiftProtobuf


public struct User: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "User"}
  public var protoMessageName: String {return "User"}
  public var protoPackageName: String {return ""}
  public var jsonFieldNames: [String: Int] {return [
    "id": 1,
    "login": 2,
    "name": 3,
    "avaterURL": 4,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "id": 1,
    "login": 2,
    "name": 3,
    "avaterURL": 4,
  ]}

  public var id: Int32 = 0

  public var login: String = ""

  public var name: String = ""

  public var avaterURL: String = ""

  public init() {}

  public init(id: Int32? = nil,
    login: String? = nil,
    name: String? = nil,
    avaterURL: String? = nil)
  {
    if let v = id {
      self.id = v
    }
    if let v = login {
      self.login = v
    }
    if let v = name {
      self.name = v
    }
    if let v = avaterURL {
      self.avaterURL = v
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufInt32.self, value: &id)
    case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &login)
    case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &name)
    case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &avaterURL)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if id != 0 {
      try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: id, protoFieldNumber: 1, protoFieldName: "id", jsonFieldName: "id", swiftFieldName: "id")
    }
    if login != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: login, protoFieldNumber: 2, protoFieldName: "login", jsonFieldName: "login", swiftFieldName: "login")
    }
    if name != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: name, protoFieldNumber: 3, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
    }
    if avaterURL != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: avaterURL, protoFieldNumber: 4, protoFieldName: "avaterURL", jsonFieldName: "avaterURL", swiftFieldName: "avaterURL")
    }
  }

  public func _protoc_generated_isEqualTo(other: User) -> Bool {
    if id != other.id {return false}
    if login != other.login {return false}
    if name != other.name {return false}
    if avaterURL != other.avaterURL {return false}
    return true
  }
}
